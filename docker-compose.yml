version: '3'

networks:
  app:
    driver: bridge

services:
  vault:
    image: hashicorp/vault
    container_name: vault
    hostname: vault
    ports:
      - 8200:8200
    volumes:
      - ./config/vault_config.hcl:/vault/config/config.hcl
      - vault-data:/vault/file/
    environment:
      - VAULT_ADDR=http://localhost:8200
    cap_add:
      - IPC_LOCK
    command: server
    restart: always
    networks:
      - app
  vault-init:
    image: hashicorp/vault
    container_name: vault-init
    environment:
      - VAULT_ADDR=http://vault:8200
      - MY_VAULT_TOKEN=${MY_VAULT_TOKEN:-test}
    env_file:
      - ./config/app_secrets.env
    volumes:
      - ./vault-root-token:/vault/file/vault-root-token
      - ./docker/vault-server/vault-init.sh:/usr/local/bin/vault-init.sh
      - vault-data:/vault/file/
    command: /usr/local/bin/vault-init.sh
    restart: on-failure
    depends_on:
      - vault
    networks:
      - app

  db:
    image: mysql
    container_name: MySQL_DB
    ports:
      - "3366:3306"
    expose:
      - "3306"
    env_file:
      - ./config/mysql_db_config.env
    restart: on-failure
    volumes:
      - "./docker/db-server/init.sql:/docker-entrypoint-initdb.d/1.sql"
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      interval: 20s
      timeout: 1s
      retries: 5
    networks:
      - app
  project:
    container_name: MSISDNApp
    build:
      context: .
    depends_on:
      db:
        condition: service_healthy
    environment:
      - VAULT_ADDR=http://vault:8200
      - MY_VAULT_TOKEN=${MY_VAULT_TOKEN:-test}
      - APP_PORT=8080
    ports:
      - 8080:8080
    networks:
      - app
volumes:
  vault-data:

